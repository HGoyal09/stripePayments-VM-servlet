<script src="https://js.stripe.com/v3/"></script>


<div class="example1">
<form action="ChargeCard" name="chargeCard" method="post" id="payment-form">
  <div class="form-row">
##    <label for="card-element">
##      Credit or debit card
##    </label>
##    <div id="card-element">
##      <!-- A Stripe Element will be inserted here. -->
##    </div>

      <label for="card-number">
        Card number
      </label>

      <div id="card-number"></div>


    <label for="card-expiry">
      Expiration Date
    </label>

    <div id="card-expiry"></div>

    <label for="card-cvc">
      CVC
    </label>

    <div id="card-cvc"></div>


##      <ul>
##        <div id="stripe-error"></div>
##      </ul>



    <div class="form-group">
      <div class="col-sm-10">
        <label class="required" for="nameoncard">Name on Credit Card</label>
        <input class="form-control" type="text" maxlength="50" id="nameoncard" name="nameoncard" aria-required="true"/>
      </div>
    </div>




    <!-- Used to display form errors. -->
    <div id="card-errors" role="alert"></div>
  </div>

  <a id="tocheckout" onclick="submitButton(event)" class="btn-abebooks">Submit a tag</a>
  <button>Submit Payment</button>
</form>
</div>


<script>
  var stripe = Stripe('pk_test_51Hh0EWHXCFaKJwPeFxcpLt5Wm7iLZVsIKmPh1ZIzd7ekrqN5mMpUgKeATeZ9GaU9A4zHI9J6nNl3onwWTGQd1egW00b9iowpNO');

    // Create an instance of Elements.
    var elements = stripe.elements();

    // Custom styling can be passed to options when creating an Element.
    // (Note that this demo uses a wider set of styles than the guide below.)
    var style = {
      base: {
        color: '#32325d',
        fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
      }
    };

  // Create an instance of the card Element.
  // var card = elements.create('card', {style: style});
  var card = elements.create('cardNumber', {style: style});

  var expiry = elements.create('cardExpiry', {style: style});

  var cardCvc = elements.create('cardCvc');


  // Add an instance of the card Element into the `card-element` <div>.
  // card.mount('#card-element');

  // card.mount('#card-number');
  // expiry.mount('#card-expiry');
  cardCvc.mount('#card-cvc');


  // Handle real-time validation errors from the card Element.
  card.on('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });

  async function submitButton(event) {
    console.log("button was clicked");
    console.log(event);


    const result = await stripe.createPaymentMethod({
      type: "card",
      card: card
    });


    console.log("Result = " + JSON.stringify(result));
  }





  // var example1 = document.querySelector('.example1');
  // console.log("example1 = " + example1);
  //
  // var example = document.querySelector('.chargeCard');
  // console.log("example = " + example);
  //
  // var atag = example.querySelector('.tocheckout');
  //
  // atag.addEventListener('click', function (e) {
  //   console.log("atag was clicked");
  // });


  var submit = document.querySelector('.btn-abebooks');
  console.log("submit button = " + JSON.stringify(submit));

  submit.addEventListener('click', function (e) {
    console.log("entered add event listener");
  });






  // Handle form submission.
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();
    //
    // stripe.createPaymentMethod({
    //   type: "card",
    //   card: card
    // }).then(res => {
    //   if (!res.error) {
    //     console.log("payment method = " + JSON.stringify(res.paymentMethod));
    //     console.log("payment method id = " + res.paymentMethod.id);
    //     var form = document.getElementById('payment-form');
    //
    //     var hiddenInput = document.createElement('input');
    //     hiddenInput.setAttribute('type', 'hidden');
    //     hiddenInput.setAttribute('name', 'paymentMethodId');
    //     hiddenInput.setAttribute('value', res.paymentMethod.id);
    //     form.appendChild(hiddenInput);
    //
    //     console.log("form = " + JSON.stringify(form));
    //     form.submit();
    //   } else {
    //     // var errorField = document.getElementById("stripe-error");
    //     //
    //     // var message = document.createElement("li");
    //     // message.setAttribute('name', 'error-message');
    //     // message.setAttribute('value', JSON.stringify(res.error));
    //     // errorField.appendChild(message);
    //
    //     var displayError = document.getElementById('card-errors');
    //     displayError.textContent = JSON.stringify(res.error);
    //     console.log("error = " + JSON.stringify(res.error));
    //   }
    // });



    console.log("Creating cvc token");
    stripe.createToken('cvc_update', cardCvc).then((res) => {
      if (!res.error) {
        console.log("res = " + JSON.stringify(res));
      } else {
        console.log("error = " + JSON.stringify(res));
      }
    })

  });


  // Submit the form with the token ID.
  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    console.log("form = " + JSON.stringify(form))

    // Submit the form
    // form.submit();
  }

</script>

